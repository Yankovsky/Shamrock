//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ShamrockModel", "DishCategories_DishCategories_Locale", "DishCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.DishCategory), "DishCategories_Locale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.DishCategory_Locale), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "DishCategories_Dishes", "DishCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.DishCategory), "Dish", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.Dish), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "Dishes_Dishes_Locale", "Dish", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.Dish), "Dishes_Locale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.Dish_Locale), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "Events_Events_Locale", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.Event), "Events_Locale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.Event_Locale), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "EventTypes_Events", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.EventType), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.Event), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.PhotoAlbum), "PhotoAlbums_Locale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.PhotoAlbum_Locale), true)]
[assembly: EdmRelationshipAttribute("ShamrockModel", "ImageLinkCategory_ImageLinks", "ImageLinkCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shamrock_WebSite.Models.ImageLinkCategory), "ImageLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shamrock_WebSite.Models.ImageLink), true)]

#endregion

namespace Shamrock_WebSite.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ShamrockEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ShamrockEntities object using the connection string found in the 'ShamrockEntities' section of the application configuration file.
        /// </summary>
        public ShamrockEntities() : base("name=ShamrockEntities", "ShamrockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShamrockEntities object.
        /// </summary>
        public ShamrockEntities(string connectionString) : base(connectionString, "ShamrockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShamrockEntities object.
        /// </summary>
        public ShamrockEntities(EntityConnection connection) : base(connection, "ShamrockEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DishCategory> DishCategories
        {
            get
            {
                if ((_DishCategories == null))
                {
                    _DishCategories = base.CreateObjectSet<DishCategory>("DishCategories");
                }
                return _DishCategories;
            }
        }
        private ObjectSet<DishCategory> _DishCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DishCategory_Locale> DishCategory_Locale
        {
            get
            {
                if ((_DishCategory_Locale == null))
                {
                    _DishCategory_Locale = base.CreateObjectSet<DishCategory_Locale>("DishCategory_Locale");
                }
                return _DishCategory_Locale;
            }
        }
        private ObjectSet<DishCategory_Locale> _DishCategory_Locale;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dish> Dishes
        {
            get
            {
                if ((_Dishes == null))
                {
                    _Dishes = base.CreateObjectSet<Dish>("Dishes");
                }
                return _Dishes;
            }
        }
        private ObjectSet<Dish> _Dishes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dish_Locale> Dish_Locale
        {
            get
            {
                if ((_Dish_Locale == null))
                {
                    _Dish_Locale = base.CreateObjectSet<Dish_Locale>("Dish_Locale");
                }
                return _Dish_Locale;
            }
        }
        private ObjectSet<Dish_Locale> _Dish_Locale;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event_Locale> Event_Locale
        {
            get
            {
                if ((_Event_Locale == null))
                {
                    _Event_Locale = base.CreateObjectSet<Event_Locale>("Event_Locale");
                }
                return _Event_Locale;
            }
        }
        private ObjectSet<Event_Locale> _Event_Locale;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoAlbum> PhotoAlbums
        {
            get
            {
                if ((_PhotoAlbums == null))
                {
                    _PhotoAlbums = base.CreateObjectSet<PhotoAlbum>("PhotoAlbums");
                }
                return _PhotoAlbums;
            }
        }
        private ObjectSet<PhotoAlbum> _PhotoAlbums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoAlbum_Locale> PhotoAlbum_Locale
        {
            get
            {
                if ((_PhotoAlbum_Locale == null))
                {
                    _PhotoAlbum_Locale = base.CreateObjectSet<PhotoAlbum_Locale>("PhotoAlbum_Locale");
                }
                return _PhotoAlbum_Locale;
            }
        }
        private ObjectSet<PhotoAlbum_Locale> _PhotoAlbum_Locale;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableReservation> TableReservations
        {
            get
            {
                if ((_TableReservations == null))
                {
                    _TableReservations = base.CreateObjectSet<TableReservation>("TableReservations");
                }
                return _TableReservations;
            }
        }
        private ObjectSet<TableReservation> _TableReservations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageLinkCategory> ImageLinkCategories
        {
            get
            {
                if ((_ImageLinkCategories == null))
                {
                    _ImageLinkCategories = base.CreateObjectSet<ImageLinkCategory>("ImageLinkCategories");
                }
                return _ImageLinkCategories;
            }
        }
        private ObjectSet<ImageLinkCategory> _ImageLinkCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageLink> ImageLinks
        {
            get
            {
                if ((_ImageLinks == null))
                {
                    _ImageLinks = base.CreateObjectSet<ImageLink>("ImageLinks");
                }
                return _ImageLinks;
            }
        }
        private ObjectSet<ImageLink> _ImageLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaffMember> StaffMembers
        {
            get
            {
                if ((_StaffMembers == null))
                {
                    _StaffMembers = base.CreateObjectSet<StaffMember>("StaffMembers");
                }
                return _StaffMembers;
            }
        }
        private ObjectSet<StaffMember> _StaffMembers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DishCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDishCategories(DishCategory dishCategory)
        {
            base.AddObject("DishCategories", dishCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DishCategory_Locale EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDishCategory_Locale(DishCategory_Locale dishCategory_Locale)
        {
            base.AddObject("DishCategory_Locale", dishCategory_Locale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dishes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDishes(Dish dish)
        {
            base.AddObject("Dishes", dish);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dish_Locale EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDish_Locale(Dish_Locale dish_Locale)
        {
            base.AddObject("Dish_Locale", dish_Locale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Event_Locale EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvent_Locale(Event_Locale event_Locale)
        {
            base.AddObject("Event_Locale", event_Locale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoAlbums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoAlbums(PhotoAlbum photoAlbum)
        {
            base.AddObject("PhotoAlbums", photoAlbum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoAlbum_Locale EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoAlbum_Locale(PhotoAlbum_Locale photoAlbum_Locale)
        {
            base.AddObject("PhotoAlbum_Locale", photoAlbum_Locale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableReservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableReservations(TableReservation tableReservation)
        {
            base.AddObject("TableReservations", tableReservation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageLinkCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageLinkCategories(ImageLinkCategory imageLinkCategory)
        {
            base.AddObject("ImageLinkCategories", imageLinkCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageLinks(ImageLink imageLink)
        {
            base.AddObject("ImageLinks", imageLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaffMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffMembers(StaffMember staffMember)
        {
            base.AddObject("StaffMembers", staffMember);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.String author, global::System.String body, global::System.DateTime date)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.Author = author;
            comment.Body = body;
            comment.Date = date;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="Dish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dish : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dish object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dishCategoryId">Initial value of the DishCategoryId property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static Dish CreateDish(global::System.Int32 id, global::System.Int32 dishCategoryId, global::System.String cost)
        {
            Dish dish = new Dish();
            dish.Id = id;
            dish.DishCategoryId = dishCategoryId;
            dish.Cost = cost;
            return dish;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DishCategoryId
        {
            get
            {
                return _DishCategoryId;
            }
            set
            {
                OnDishCategoryIdChanging(value);
                ReportPropertyChanging("DishCategoryId");
                _DishCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DishCategoryId");
                OnDishCategoryIdChanged();
            }
        }
        private global::System.Int32 _DishCategoryId;
        partial void OnDishCategoryIdChanging(global::System.Int32 value);
        partial void OnDishCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.String _Cost;
        partial void OnCostChanging(global::System.String value);
        partial void OnCostChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "DishCategories_Dishes", "DishCategory")]
        public DishCategory DishCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_Dishes", "DishCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_Dishes", "DishCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DishCategory> DishCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_Dishes", "DishCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DishCategory>("ShamrockModel.DishCategories_Dishes", "DishCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "Dishes_Dishes_Locale", "Dishes_Locale")]
        public EntityCollection<Dish_Locale> Dishes_Locale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dish_Locale>("ShamrockModel.Dishes_Dishes_Locale", "Dishes_Locale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dish_Locale>("ShamrockModel.Dishes_Dishes_Locale", "Dishes_Locale", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="Dish_Locale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dish_Locale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dish_Locale object.
        /// </summary>
        /// <param name="dishId">Initial value of the DishId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="portion">Initial value of the Portion property.</param>
        /// <param name="culture">Initial value of the Culture property.</param>
        public static Dish_Locale CreateDish_Locale(global::System.Int32 dishId, global::System.String displayName, global::System.String portion, global::System.String culture)
        {
            Dish_Locale dish_Locale = new Dish_Locale();
            dish_Locale.DishId = dishId;
            dish_Locale.DisplayName = displayName;
            dish_Locale.Portion = portion;
            dish_Locale.Culture = culture;
            return dish_Locale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DishId
        {
            get
            {
                return _DishId;
            }
            set
            {
                if (_DishId != value)
                {
                    OnDishIdChanging(value);
                    ReportPropertyChanging("DishId");
                    _DishId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DishId");
                    OnDishIdChanged();
                }
            }
        }
        private global::System.Int32 _DishId;
        partial void OnDishIdChanging(global::System.Int32 value);
        partial void OnDishIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Portion
        {
            get
            {
                return _Portion;
            }
            set
            {
                OnPortionChanging(value);
                ReportPropertyChanging("Portion");
                _Portion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Portion");
                OnPortionChanged();
            }
        }
        private global::System.String _Portion;
        partial void OnPortionChanging(global::System.String value);
        partial void OnPortionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                if (_Culture != value)
                {
                    OnCultureChanging(value);
                    ReportPropertyChanging("Culture");
                    _Culture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Culture");
                    OnCultureChanged();
                }
            }
        }
        private global::System.String _Culture;
        partial void OnCultureChanging(global::System.String value);
        partial void OnCultureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "Dishes_Dishes_Locale", "Dish")]
        public Dish Dish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dish>("ShamrockModel.Dishes_Dishes_Locale", "Dish").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dish>("ShamrockModel.Dishes_Dishes_Locale", "Dish").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dish> DishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dish>("ShamrockModel.Dishes_Dishes_Locale", "Dish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dish>("ShamrockModel.Dishes_Dishes_Locale", "Dish", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="DishCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DishCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DishCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static DishCategory CreateDishCategory(global::System.Int32 id, global::System.String name, global::System.Int32 order)
        {
            DishCategory dishCategory = new DishCategory();
            dishCategory.Id = id;
            dishCategory.Name = name;
            dishCategory.Order = order;
            return dishCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "DishCategories_DishCategories_Locale", "DishCategories_Locale")]
        public EntityCollection<DishCategory_Locale> DishCategories_Locale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DishCategory_Locale>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategories_Locale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DishCategory_Locale>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategories_Locale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "DishCategories_Dishes", "Dish")]
        public EntityCollection<Dish> Dishes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dish>("ShamrockModel.DishCategories_Dishes", "Dish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dish>("ShamrockModel.DishCategories_Dishes", "Dish", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="DishCategory_Locale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DishCategory_Locale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DishCategory_Locale object.
        /// </summary>
        /// <param name="dishCategoryId">Initial value of the DishCategoryId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="culture">Initial value of the Culture property.</param>
        public static DishCategory_Locale CreateDishCategory_Locale(global::System.Int32 dishCategoryId, global::System.String displayName, global::System.String culture)
        {
            DishCategory_Locale dishCategory_Locale = new DishCategory_Locale();
            dishCategory_Locale.DishCategoryId = dishCategoryId;
            dishCategory_Locale.DisplayName = displayName;
            dishCategory_Locale.Culture = culture;
            return dishCategory_Locale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DishCategoryId
        {
            get
            {
                return _DishCategoryId;
            }
            set
            {
                if (_DishCategoryId != value)
                {
                    OnDishCategoryIdChanging(value);
                    ReportPropertyChanging("DishCategoryId");
                    _DishCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DishCategoryId");
                    OnDishCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _DishCategoryId;
        partial void OnDishCategoryIdChanging(global::System.Int32 value);
        partial void OnDishCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                if (_Culture != value)
                {
                    OnCultureChanging(value);
                    ReportPropertyChanging("Culture");
                    _Culture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Culture");
                    OnCultureChanged();
                }
            }
        }
        private global::System.String _Culture;
        partial void OnCultureChanging(global::System.String value);
        partial void OnCultureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "DishCategories_DishCategories_Locale", "DishCategory")]
        public DishCategory DishCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DishCategory> DishCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DishCategory>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DishCategory>("ShamrockModel.DishCategories_DishCategories_Locale", "DishCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.DateTime date, global::System.Int32 eventTypeId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.Date = date;
            @event.EventTypeId = eventTypeId;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "Events_Events_Locale", "Events_Locale")]
        public EntityCollection<Event_Locale> Events_Locale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event_Locale>("ShamrockModel.Events_Events_Locale", "Events_Locale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event_Locale>("ShamrockModel.Events_Events_Locale", "Events_Locale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "EventTypes_Events", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ShamrockModel.EventTypes_Events", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ShamrockModel.EventTypes_Events", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ShamrockModel.EventTypes_Events", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("ShamrockModel.EventTypes_Events", "EventType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="Event_Locale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event_Locale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event_Locale object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="culture">Initial value of the Culture property.</param>
        public static Event_Locale CreateEvent_Locale(global::System.Int32 eventId, global::System.String displayName, global::System.String description, global::System.String culture)
        {
            Event_Locale event_Locale = new Event_Locale();
            event_Locale.EventId = eventId;
            event_Locale.DisplayName = displayName;
            event_Locale.Description = description;
            event_Locale.Culture = culture;
            return event_Locale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                if (_Culture != value)
                {
                    OnCultureChanging(value);
                    ReportPropertyChanging("Culture");
                    _Culture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Culture");
                    OnCultureChanged();
                }
            }
        }
        private global::System.String _Culture;
        partial void OnCultureChanging(global::System.String value);
        partial void OnCultureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "Events_Events_Locale", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("ShamrockModel.Events_Events_Locale", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("ShamrockModel.Events_Events_Locale", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("ShamrockModel.Events_Events_Locale", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("ShamrockModel.Events_Events_Locale", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventType CreateEventType(global::System.Int32 id, global::System.String name)
        {
            EventType eventType = new EventType();
            eventType.Id = id;
            eventType.Name = name;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "EventTypes_Events", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("ShamrockModel.EventTypes_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("ShamrockModel.EventTypes_Events", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="ImageLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageLink object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="imageLinkCategoryId">Initial value of the ImageLinkCategoryId property.</param>
        public static ImageLink CreateImageLink(global::System.Int32 id, global::System.Int32 imageLinkCategoryId)
        {
            ImageLink imageLink = new ImageLink();
            imageLink.Id = id;
            imageLink.ImageLinkCategoryId = imageLinkCategoryId;
            return imageLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateText
        {
            get
            {
                return _AlternateText;
            }
            set
            {
                OnAlternateTextChanging(value);
                ReportPropertyChanging("AlternateText");
                _AlternateText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlternateText");
                OnAlternateTextChanged();
            }
        }
        private global::System.String _AlternateText;
        partial void OnAlternateTextChanging(global::System.String value);
        partial void OnAlternateTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageLinkCategoryId
        {
            get
            {
                return _ImageLinkCategoryId;
            }
            set
            {
                OnImageLinkCategoryIdChanging(value);
                ReportPropertyChanging("ImageLinkCategoryId");
                _ImageLinkCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageLinkCategoryId");
                OnImageLinkCategoryIdChanged();
            }
        }
        private global::System.Int32 _ImageLinkCategoryId;
        partial void OnImageLinkCategoryIdChanging(global::System.Int32 value);
        partial void OnImageLinkCategoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "ImageLinkCategory_ImageLinks", "ImageLinkCategory")]
        public ImageLinkCategory ImageLinkCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageLinkCategory>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLinkCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageLinkCategory>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLinkCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImageLinkCategory> ImageLinkCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageLinkCategory>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLinkCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImageLinkCategory>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLinkCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="ImageLinkCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageLinkCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageLinkCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="maxWidth">Initial value of the MaxWidth property.</param>
        /// <param name="maxHeight">Initial value of the MaxHeight property.</param>
        public static ImageLinkCategory CreateImageLinkCategory(global::System.Int32 id, global::System.String name, global::System.Int32 maxWidth, global::System.Int32 maxHeight)
        {
            ImageLinkCategory imageLinkCategory = new ImageLinkCategory();
            imageLinkCategory.Id = id;
            imageLinkCategory.Name = name;
            imageLinkCategory.MaxWidth = maxWidth;
            imageLinkCategory.MaxHeight = maxHeight;
            return imageLinkCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxWidth
        {
            get
            {
                return _MaxWidth;
            }
            set
            {
                OnMaxWidthChanging(value);
                ReportPropertyChanging("MaxWidth");
                _MaxWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxWidth");
                OnMaxWidthChanged();
            }
        }
        private global::System.Int32 _MaxWidth;
        partial void OnMaxWidthChanging(global::System.Int32 value);
        partial void OnMaxWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxHeight
        {
            get
            {
                return _MaxHeight;
            }
            set
            {
                OnMaxHeightChanging(value);
                ReportPropertyChanging("MaxHeight");
                _MaxHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxHeight");
                OnMaxHeightChanged();
            }
        }
        private global::System.Int32 _MaxHeight;
        partial void OnMaxHeightChanging(global::System.Int32 value);
        partial void OnMaxHeightChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "ImageLinkCategory_ImageLinks", "ImageLink")]
        public EntityCollection<ImageLink> ImageLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImageLink>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImageLink>("ShamrockModel.ImageLinkCategory_ImageLinks", "ImageLink", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="PhotoAlbum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoAlbum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoAlbum object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isSystem">Initial value of the IsSystem property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static PhotoAlbum CreatePhotoAlbum(global::System.Int32 id, global::System.Boolean isSystem, global::System.Int32 order)
        {
            PhotoAlbum photoAlbum = new PhotoAlbum();
            photoAlbum.Id = id;
            photoAlbum.IsSystem = isSystem;
            photoAlbum.Order = order;
            return photoAlbum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSystem
        {
            get
            {
                return _IsSystem;
            }
            set
            {
                OnIsSystemChanging(value);
                ReportPropertyChanging("IsSystem");
                _IsSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSystem");
                OnIsSystemChanged();
            }
        }
        private global::System.Boolean _IsSystem;
        partial void OnIsSystemChanging(global::System.Boolean value);
        partial void OnIsSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbums_Locale")]
        public EntityCollection<PhotoAlbum_Locale> PhotoAlbums_Locale
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoAlbum_Locale>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbums_Locale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoAlbum_Locale>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbums_Locale", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="PhotoAlbum_Locale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoAlbum_Locale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoAlbum_Locale object.
        /// </summary>
        /// <param name="photoAlbumId">Initial value of the PhotoAlbumId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="culture">Initial value of the Culture property.</param>
        public static PhotoAlbum_Locale CreatePhotoAlbum_Locale(global::System.Int32 photoAlbumId, global::System.String displayName, global::System.String culture)
        {
            PhotoAlbum_Locale photoAlbum_Locale = new PhotoAlbum_Locale();
            photoAlbum_Locale.PhotoAlbumId = photoAlbumId;
            photoAlbum_Locale.DisplayName = displayName;
            photoAlbum_Locale.Culture = culture;
            return photoAlbum_Locale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoAlbumId
        {
            get
            {
                return _PhotoAlbumId;
            }
            set
            {
                if (_PhotoAlbumId != value)
                {
                    OnPhotoAlbumIdChanging(value);
                    ReportPropertyChanging("PhotoAlbumId");
                    _PhotoAlbumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoAlbumId");
                    OnPhotoAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _PhotoAlbumId;
        partial void OnPhotoAlbumIdChanging(global::System.Int32 value);
        partial void OnPhotoAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Culture
        {
            get
            {
                return _Culture;
            }
            set
            {
                if (_Culture != value)
                {
                    OnCultureChanging(value);
                    ReportPropertyChanging("Culture");
                    _Culture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Culture");
                    OnCultureChanged();
                }
            }
        }
        private global::System.String _Culture;
        partial void OnCultureChanging(global::System.String value);
        partial void OnCultureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShamrockModel", "PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum")]
        public PhotoAlbum PhotoAlbum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhotoAlbum> PhotoAlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhotoAlbum>("ShamrockModel.PhotoAlbums_PhotoAlbums_Locale", "PhotoAlbum", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="StaffMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaffMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaffMember object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static StaffMember CreateStaffMember(global::System.Int32 id, global::System.String name, global::System.String phone)
        {
            StaffMember staffMember = new StaffMember();
            staffMember.Id = id;
            staffMember.Name = name;
            staffMember.Phone = phone;
            return staffMember;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShamrockModel", Name="TableReservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableReservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableReservation object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="staffNotified">Initial value of the StaffNotified property.</param>
        public static TableReservation CreateTableReservation(global::System.DateTime date, global::System.Int32 tableId, global::System.String time, global::System.String phoneNumber, global::System.String name, global::System.Boolean staffNotified)
        {
            TableReservation tableReservation = new TableReservation();
            tableReservation.Date = date;
            tableReservation.TableId = tableId;
            tableReservation.Time = time;
            tableReservation.PhoneNumber = phoneNumber;
            tableReservation.Name = name;
            tableReservation.StaffNotified = staffNotified;
            return tableReservation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                if (_TableId != value)
                {
                    OnTableIdChanging(value);
                    ReportPropertyChanging("TableId");
                    _TableId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TableId");
                    OnTableIdChanged();
                }
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Wishes
        {
            get
            {
                return _Wishes;
            }
            set
            {
                OnWishesChanging(value);
                ReportPropertyChanging("Wishes");
                _Wishes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Wishes");
                OnWishesChanged();
            }
        }
        private global::System.String _Wishes;
        partial void OnWishesChanging(global::System.String value);
        partial void OnWishesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean StaffNotified
        {
            get
            {
                return _StaffNotified;
            }
            set
            {
                OnStaffNotifiedChanging(value);
                ReportPropertyChanging("StaffNotified");
                _StaffNotified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StaffNotified");
                OnStaffNotifiedChanged();
            }
        }
        private global::System.Boolean _StaffNotified;
        partial void OnStaffNotifiedChanging(global::System.Boolean value);
        partial void OnStaffNotifiedChanged();

        #endregion
    
    }

    #endregion
    
}
